[] CromosomaP3 Arbol
[] Función adaptación (cuan bueno es con aciertos o fallos)
[OK] Generación
	[OK] Completa: p.32 Prog Genetica
		Genera elementos nodo de funciones hasta llegar a prof max y en la prof max solo genera terminales.
		Hasta PROF MAX Solo funciones. Despues Terminales (Operandos)
		· Vamos tomando nodos del conjunto de funciones hasta
		llegar a una máxima profundidad del arbol predefinida.
		· Una vez en la profundidad máxima, los simbolos solo
		se toman del conjunto de terminales.
	[OK] Creciente: p.34 Prog Genetica
		Creciente va cogiendo de ambos en cada nivel, hasta llegar al final donde solo pone terminales.
		Creciente va generando terminales o funciones en cualqueir nivel
		· Vamos tomando nodos del conjunto de funciones y terminales
		hasta llegar al límite de profundidad predefinido.
		· En la profundidad máxima, los simbolos solo se toman
		del conjunto de terminales.
	[OK] Ramped & Half

[OK] Selección
	[OK] Dejar los que había.

[OK] Cruce 
	[OK] Permutación:
		Buscar un punto aleatorio en cada uno de los padres (nodo función)
		Intercambia los subarboles de los nodos entre los padres.
		Se intenta que se intercambien nodos función con más posiblidad (0.9)

[] Mutación
	[OK] Terminal: Cambia una operando (hoja) - OBLIGATORIO
	[OK] Función: Cambia un operador - OBLIGADO
	[] subárbol: descarta un subarbol y vuelve a generarlo aleatoriamente. - OBLIGATORIO
	[] Permutación: intercambia el orden de dos operandos - OBLIGATORIO
	---------
	[] Hoist: Coge un subarbol dentro del arbol y descarta el resto.
	[] Expansión: Sustituye una hoja operando con un subarbol
	[] Contracción: Convierte un nodo función en una hoja operando, descartando lo demás.
	
[OK] 2 Metodos de bloating ??
	[OK] Tarpeian - OBLIGATORIO
	[OK] Penalización bien fundamentada: factor de corrección C = Covarianza y Varianza 
			C(t) = Cov(tamInd, fitness) / Varianza (tamaño individuos)
			hay que recalcular C(t) en cada generación
			da un tamaño medio de los individuos sea más o menos el mismo.

[OK] GUI para configurar parametros y mostrar grafica
	[OK] Profundidad máxima Arboles
	[OK] Numero de entradas
	[OK] Selector de cruces
	[OK] Selector de mutación
	[OK] Selector de Control Bloating

BLOATING
Tamaño del cromosoma crece a lo largo de las generaciones.
Hay que controlar la profundidad de los árboles.
Se puede reducir penalizando el tamaño de los cromosomas.
Cosas que lo causan-> Intrones (código inutil) _> penalizarlos. 
Formas de control
	[OK] Evaluando: Cogemos el fitness original y le sumamos/restamos un coeficiente de nodos f'(x) = f(x) + K * nodos

	[OK] Tarpeian: si el tamaño del arbol del individuo es mayor que el tamaño medio de la población, tiene una posibilidad (50%) de devolver un mal fitness


CONJUNTO TERMINALES
Resolver funcionamiento multiplexor 6 entradas.
2 dirección A0 A1
4 Datos D0 D1 D2 D3

CONJUNTO FUNCIONES
Funcion NOT (1 Argumento)
Funciones AND OR (2 Argumentos)

Funcion IF (3 Argumentos X Y Z)
	- IF X entonces IF Y
	- IF NOT X entonces Z

codifican 4 números binarios
A0
A1 

Esta codificación elije que devuelve el multiplexor en su salida.
00 01 10 11
D0 D1 D2 D3

Función de Aptitud
Se mira el total de aciertos (maximizar) o fallos (minimizar) sobre los 64 casos posibles de prueba


POSIBILIDADES REALES (128)  - Posibilidades a considerar (64) SOLO ENTRADA Y SALIDA CORRECTA. Ver aciertos y fallos.

	A0	A1	D0	D1	D2	D3	OUTPUT	Resultado
	------------------------------------------------------------------------- SECTOR A0A1 = D3
	1	1	1	1	1  [1] [1]		Correcto A0A1=D3 -> Salida = D3
	1	1	1	1	1	1	0
	1	1	1	1	1	0	1
	1	1	1	1	1  [0] [0]		Correcto A0A1=D3 -> Salida = D3
	1	1	1	1	0  [1] [1]		Correcto A0A1=D3 -> Salida = D3
	1	1	1	1	0	1	0	
	1	1	1	1	0	0	1
	1	1	1	1	0  [0] [0]		Correcto A0A1=D3 -> Salida = D3
	1	1	1	0	1  [1] [1]		Correcto A0A1=D3 -> Salida = D3
	1	1	1	0	1	1	0
	1	1	1	0	1	0	1
	1	1	1	0	1  [0] [0]		Correcto A0A1=D3 -> Salida = D3
	1	1	1	0	0  [1] [1]		Correcto A0A1=D3 -> Salida = D3
	1	1	1	0	0	1	0
	1	1	1	0	0	0	1
	1	1	1	0	0  [0] [0]		Correcto A0A1=D3 -> Salida = D3
	1	1	0	1	1  [1] [1]		Correcto A0A1=D3 -> Salida = D3
	1	1	0	1	1	1	0
	1	1	0	1	1	0	1
	1	1	0	1	1  [0] [0]		Correcto A0A1=D3 -> Salida = D3
	1	1	0	1	0  [1] [1]		Correcto A0A1=D3 -> Salida = D3
	1	1	0	1	0	1	0	
	1	1	0	1	0	0	1
	1	1	0	1	0  [0] [0]		Correcto A0A1=D3 -> Salida = D3
	1	1	0	0	1  [1] [1]		Correcto A0A1=D3 -> Salida = D3
	1	1	0	0	1	1	0
	1	1	0	0	1	0	1
	1	1	0	0	1  [0] [0]		Correcto A0A1=D3 -> Salida = D3
	1	1	0	0	0  [1] [1]		Correcto A0A1=D3 -> Salida = D3
	1	1	0	0	0	1	0
	1	1	0	0	0	0	1	
	1	1	0	0	0  [0] [0]		Correcto A0A1=D3 -> Salida = D3
	-------------------------------------------------------------------------- SECTOR A0A1 = D2
	1	0	1	1  [1]	1  [1]		Correcto A0A1=D2 -> Salida = D2
	1	0	1	1	1	1	0
	1	0	1	1  [1]	0  [1]		Correcto A0A1=D2 -> Salida = D2
	1	0	1	1	1	0	0		
	1	0	1	1	0	1	1
	1	0	1	1  [0]	1  [0]		Correcto A0A1=D2 -> Salida = D2	
	1	0	1	1	0	0	1
	1	0	1	1  [0]	0  [0]		Correcto A0A1=D2 -> Salida = D2
	1	0	1	0  [1]	1  [1]		Correcto A0A1=D2 -> Salida = D2
	1	0	1	0	1	1	0
	1	0	1	0  [1]	0  [1]		Correcto A0A1=D2 -> Salida = D2
	1	0	1	0	1	0	0
	1	0	1	0	0	1	1
	1	0	1	0  [0]	1  [0]		Correcto A0A1=D2 -> Salida = D2
	1	0	1	0	0	0	1
	1	0	1	0  [0]	0  [0]		Correcto A0A1=D2 -> Salida = D2
	1	0	0	1  [1]	1  [1]		Correcto A0A1=D2 -> Salida = D2
	1	0	0	1	1	1	0
	1	0	0	1  [1]	0  [1]		Correcto A0A1=D2 -> Salida = D2
	1	0	0	1	1	0	0
	1	0	0	1	0	1	1
	1	0	0	1  [0]	1  [0]		Correcto A0A1=D2 -> Salida = D2
	1	0	0	1	0	0	1
	1	0	0	1  [0]	0  [0]		Correcto A0A1=D2 -> Salida = D2
	1	0	0	0  [1]	1  [1]		Correcto A0A1=D2 -> Salida = D2
	1	0	0	0	1	1	0
	1	0	0	0  [1]	0  [1]		Correcto A0A1=D2 -> Salida = D2
	1	0	0	0	1	0	0
	1	0	0	0	0	1	1
	1	0	0	0  [0]	1  [0]		Correcto A0A1=D2 -> Salida = D2
	1	0	0	0	0	0	1
	1	0	0	0  [0]	0  [0]		Correcto A0A1=D2 -> Salida = D2
	-------------------------------------------------------------------------- SECTOR A0A1 = D1
	0	1	1  [1]	1	1  [1]		Correcto A0A1=D1 -> Salida = D1
	0	1	1	1	1	1	0
	0	1	1  [1]	1	0  [1]		Correcto A0A1=D1 -> Salida = D1
	0	1	1	1	1	0	0
	0	1	1  [1]	0	1  [1]		Correcto A0A1=D1 -> Salida = D1
	0	1	1	1	0	1	0	
	0	1	1  [1]	0	0  [1]		Correcto A0A1=D1 -> Salida = D1
	0	1	1	1	0	0	0				
	0	1	1	0	1	1	1		
	0	1	1  [0]	1	1  [0]		Correcto A0A1=D1 -> Salida = D1
	0	1	1	0	1	0	1
	0	1	1  [0]	1	0  [0]		Correcto A0A1=D1 -> Salida = D1
	0	1	1	0	0	1	1
	0	1	1  [0]	0	1  [0]		Correcto A0A1=D1 -> Salida = D1
	0	1	1	0	0	0	1
	0	1	1  [0]	0	0  [0]		Correcto A0A1=D1 -> Salida = D1
	0	1	0  [1]	1	1  [1]		Correcto A0A1=D1 -> Salida = D1
	0	1	0	1	1	1	0
	0	1	0  [1]	1	0  [1]		Correcto A0A1=D1 -> Salida = D1
	0	1	0	1	1	0	0
	0	1	0  [1]	0	1  [1]		Correcto A0A1=D1 -> Salida = D1
	0	1	0	1	0	1	0	
	0	1	0  [1]	0	0  [1]		Correcto A0A1=D1 -> Salida = D1
	0	1	0	1	0	0	0
	0	1	0	0	1	1	1
	0	1	0  [0]	1	1  [0]		Correcto A0A1=D1 -> Salida = D1
	0	1	0	0	1	0	1
	0	1	0  [0]	1	0  [0]		Correcto A0A1=D1 -> Salida = D1
	0	1	0	0	0	1	1
	0	1	0  [0]	0	1  [0]		Correcto A0A1=D1 -> Salida = D1
	0	1	0	0	0	0	1
	0	1	0  [0]	0	0  [0]		Correcto A0A1=D1 -> Salida = D1
	-------------------------------------------------------------------------- SECTOR A0A1 = D0
	0	0  [1]	1	1	1  [1]		Correcto A0A1=D0 -> Salida = D0
	0	0	1	1	1	1	0		
	0	0	1	1	1	0	1		Correcto A0A1=D0 -> Salida = D0
	0	0	1	1	1	0	0
	0	0	1	1	0	1	1		Correcto A0A1=D0 -> Salida = D0
	0	0	1	1	0	1	0	
	0	0	1	1	0	0	1		Correcto A0A1=D0 -> Salida = D0
	0	0	1	1	0	0	0
	0	0	1	0	1	1	1		Correcto A0A1=D0 -> Salida = D0
	0	0	1	0	1	1	0
	0	0	1	0	1	0	1		Correcto A0A1=D0 -> Salida = D0
	0	0	1	0	1	0	0
	0	0	1	0	0	1	1		Correcto A0A1=D0 -> Salida = D0
	0	0	1	0	0	1	0
	0	0	1	0	0	0	1		Correcto A0A1=D0 -> Salida = D0
	0	0	1	0	0	0	0
	0	0	0	1	1	1	1
	0	0	0	1	1	1	0		Correcto A0A1=D0 -> Salida = D0
	0	0	0	1	1	0	1
	0	0	0	1	1	0	0		Correcto A0A1=D0 -> Salida = D0
	0	0	0	1	0	1	1
	0	0	0	1	0	1	0		Correcto A0A1=D0 -> Salida = D0
	0	0	0	1	0	0	1
	0	0	0	1	0	0	0		Correcto A0A1=D0 -> Salida = D0
	0	0	0	0	1	1	1
	0	0	0	0	1	1	0		Correcto A0A1=D0 -> Salida = D0
	0	0	0	0	1	0	1
	0	0	0	0	1	0	0		Correcto A0A1=D0 -> Salida = D0
	0	0	0	0	0	1	1
	0	0	0	0	0	1	0		Correcto A0A1=D0 -> Salida = D0
	0	0	0	0	0	0	1
	0	0	0	0	0	0	0		Correcto A0A1=D0 -> Salida = D0



Generar poblacion inicial de expresiones aleatorias. Arboles sintaticamente correctos

ARBOL Postorden: IZQ - DER - RAIZ
		A
	B 		C

H		